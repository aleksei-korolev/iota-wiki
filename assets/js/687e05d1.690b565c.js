"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[33302],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=a[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},43917:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var n=a(87462),r=(a(67294),a(3905)),l=a(34259),o=a(18679);const i={description:"Getting started with the official IOTA Wallet Library Software Rust library.",image:"/img/logo/wallet_light.png",keywords:["Rust","install","cargo","system environment variables","getting started"]},s="Getting Started with Rust",u={unversionedId:"getting_started/rust",id:"getting_started/rust",title:"Getting Started with Rust",description:"Getting started with the official IOTA Wallet Library Software Rust library.",source:"@site/iota/external/wallet.rs/production/documentation/docs/getting_started/rust.mdx",sourceDirName:"getting_started",slug:"/getting_started/rust",permalink:"/wallet.rs/getting_started/rust",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/production/documentation/iota/external/wallet.rs/production/documentation/docs/getting_started/rust.mdx",tags:[],version:"current",frontMatter:{description:"Getting started with the official IOTA Wallet Library Software Rust library.",image:"/img/logo/wallet_light.png",keywords:["Rust","install","cargo","system environment variables","getting started"]},sidebar:"docs",previous:{title:"Overview",permalink:"/wallet.rs/overview"},next:{title:"Getting Started with Node.js",permalink:"/wallet.rs/getting_started/nodejs"}},c={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Use the Library",id:"use-the-library",level:2},{value:"Add wallet.rs as a Dependency",id:"add-walletrs-as-a-dependency",level:3},{value:"Enable Asynchronous Functionality",id:"enable-asynchronous-functionality",level:3},{value:"Initialize the Library",id:"initialize-the-library",level:3}],d={toc:p};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started-with-rust"},"Getting Started with Rust"),(0,r.kt)("p",null,"You download the source code for the wallet.rs library from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/wallet.rs"},"official GitHub repository"),"."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"You will need to install ",(0,r.kt)("em",{parentName:"p"},"Rust")," and ",(0,r.kt)("em",{parentName:"p"},"Cargo")," to use wallet.rs. You can find installation instructions in the ",(0,r.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/cargo/getting-started/installation.html"},"Rust documentation"),"."),(0,r.kt)("p",null,"We recommend you update ",(0,r.kt)("em",{parentName:"p"},"Rust")," to the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rust-lang/rustup.rs#keeping-rust-up-to-date"},"latest stable version"),". The nightly version should be fine, but there is a chance some changes are not compatible."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rust-embedded.org/book/intro/no-std.html"},(0,r.kt)("em",{parentName:"a"},"no_std"))," is not currently supported, but we are working on it, and we will provide it as a feature once the new implementation is ready."),(0,r.kt)("h3",{id:"dependencies"},"Dependencies"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://cmake.org/documentation/"},(0,r.kt)("em",{parentName:"a"},"cmake"))," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.openssl.org/docs/"},(0,r.kt)("em",{parentName:"a"},"openssl"))," are required to run Rust. To run the build process successfully using Cargo, you may need install additional build tools onto your system."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,r.kt)("p",null,"You can download ",(0,r.kt)("em",{parentName:"p"},"cmake")," from the ",(0,r.kt)("a",{parentName:"p",href:"https://cmake.org/download/"},"official cmake website"),".\nYou can install ",(0,r.kt)("em",{parentName:"p"},"openssl")," with ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/microsoft/vcpkg"},"vcpkg")," or\n",(0,r.kt)("a",{parentName:"p",href:"https://chocolatey.org/"},"chocolatey"),"."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"chocolatey",label:"chocolatey",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'choco install openssl\n# you may need to set the OPENSSL_ROOT_DIR environment variable\nset OPENSSL_ROOT_DIR="C:\\Program Files\\OpenSSL-Win64"\n'))),(0,r.kt)(o.Z,{value:"vcpkg",label:"vcpkg",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./vcpkg.exe install openssl:x64-windows\n./vcpkg.exe integrate install\n# you may want to add this to the system environment variables since you'll need it to compile the crate\nset VCPKGRS_DYNAMIC=1\n"))))),(0,r.kt)(o.Z,{value:"macOS",label:"macOS",mdxType:"TabItem"},(0,r.kt)("p",null,"You can install ",(0,r.kt)("em",{parentName:"p"},"cmake")," and ",(0,r.kt)("em",{parentName:"p"},"openssl")," with ",(0,r.kt)("a",{parentName:"p",href:"https://docs.brew.sh/"},(0,r.kt)("em",{parentName:"a"},"Homebrew"))," by running the following\ncommands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"brew install cmake\nbrew install openssl@1.1\n# you may want to add this to your .zshrc or .bashrc since you'll need it to compile the crate\nOPENSSL_ROOT_DIR=$(brew --prefix openssl@1.1)\n"))),(0,r.kt)(o.Z,{value:"linux",label:"Linux",mdxType:"TabItem"},(0,r.kt)("p",null,"You can install ",(0,r.kt)("em",{parentName:"p"},"cmake")," and ",(0,r.kt)("em",{parentName:"p"},"openssl")," with your distro's package manager or download them from their websites.\nOn Debian and Ubuntu, you will also need the\n",(0,r.kt)("a",{parentName:"p",href:"https://packages.debian.org/sid/build-essential"},(0,r.kt)("em",{parentName:"a"},"build-essential"))," package."))),(0,r.kt)("h2",{id:"use-the-library"},"Use the Library"),(0,r.kt)("h3",{id:"add-walletrs-as-a-dependency"},"Add wallet.rs as a Dependency"),(0,r.kt)("p",null,"If you simply want to use the library, you only need to add this lines your ",(0,r.kt)("em",{parentName:"p"},"Cargo.toml")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[dependencies]\niota-wallet = { git = "https://github.com/iotaledger/wallet.rs", branch = "production" }\n')),(0,r.kt)("h3",{id:"enable-asynchronous-functionality"},"Enable Asynchronous Functionality"),(0,r.kt)("p",null,"The example below requires asynchronous functionality. You can enable it by adding the following line as a dependency:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'tokio = { version = "1", features = ["full"] }\n')),(0,r.kt)("h3",{id:"initialize-the-library"},"Initialize the Library"),(0,r.kt)("p",null,"To use the library, you first need to create an ",(0,r.kt)("inlineCode",{parentName:"p"},"AccountManager"),", as shown on lines 7 through 10 in the following example."),(0,r.kt)("p",null,"After you have created your ",(0,r.kt)("inlineCode",{parentName:"p"},"AccountManager")," you can use it interact with a node, for example the public devnet at ",(0,r.kt)("inlineCode",{parentName:"p"},"https://api.lb-0.h.chrysalis-devnet.iota.cafe"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:"{7-10} showLineNumbers","{7-10}":!0,showLineNumbers:!0},'use iota_wallet::{account_manager::AccountManager, client::ClientOptionsBuilder, signing::SignerType};\nuse std::path::PathBuf;\n\n#[tokio::main]\nasync fn main() -> iota_wallet::Result<()> {\n    let storage_folder: PathBuf = "./my-db".into();\n    let manager = AccountManager::builder()\n        .with_storage(&storage_folder, None)?\n        .finish()\n        .await?;\n    manager.set_stronghold_password("password").await?;\n    // If no mnemonic is provided, then the Stronghold file is the only way for a backup\n    manager.store_mnemonic(SignerType::Stronghold, None).await?;\n    let client_options = ClientOptionsBuilder::new()\n        .with_node("https://api.lb-0.h.chrysalis-devnet.iota.cafe")?\n        .build()?;\n    let account = manager\n        .create_account(client_options)?\n        .signer_type(SignerType::Stronghold)\n        .initialise()\n        .await?;\n    let address = account.generate_address().await?;\n    println!("Address: {}", address.address().to_bech32());\n    Ok(())\n}\n')))}m.isMDXComponent=!0},18679:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:a},t)}},34259:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(87462),r=a(67294),l=a(86010),o=a(51048),i=a(33609),s=a(1943),u=a(72957);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:a,block:o,defaultValue:d,values:m,groupId:h,className:g}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=m??b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),f=(0,i.l)(y,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===d?d:d??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==k&&!y.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:v}=(0,s.U)(),[N,O]=(0,r.useState)(k),T=[],{blockElementScrollPositionUntilNextRender:_}=(0,u.o5)();if(null!=h){const e=w[h];null!=e&&e!==N&&y.some((t=>t.value===e))&&O(e)}const x=e=>{const t=e.currentTarget,a=T.indexOf(t),n=y[a].value;n!==N&&(_(t),O(n),null!=h&&v(h,String(n)))},S=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;a=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;a=T[t]??T[T.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},g)},y.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>T.push(e),onKeyDown:S,onFocus:x,onClick:x},o,{className:(0,l.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":N===t})}),a??t)}))),a?(0,r.cloneElement)(b.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,o.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}}}]);