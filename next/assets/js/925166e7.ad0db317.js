"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[7983],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,c=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=c,y=p["".concat(i,".").concat(d)]||p[d]||f[d]||o;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))}));function d(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var o=n.length,a=new Array(o);a[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:c,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},79092:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),c=(n(67294),n(3905));const o={},a="Interface: AccountSyncOptions",s={unversionedId:"references/nodejs/interfaces/AccountSyncOptions",id:"references/nodejs/interfaces/AccountSyncOptions",title:"Interface: AccountSyncOptions",description:"Specifies what outputs should be synced for the ed25519 addresses from the account.",source:"@site/next/external/wallet.rs/documentation/docs/references/nodejs/interfaces/AccountSyncOptions.md",sourceDirName:"references/nodejs/interfaces",slug:"/references/nodejs/interfaces/AccountSyncOptions",permalink:"/next/wallet.rs/references/nodejs/interfaces/AccountSyncOptions",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/next/external/wallet.rs/documentation/docs/references/nodejs/interfaces/AccountSyncOptions.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Interface: AccountMetadata",permalink:"/next/wallet.rs/references/nodejs/interfaces/AccountMetadata"},next:{title:"Interface: Address",permalink:"/next/wallet.rs/references/nodejs/interfaces/Address"}},i={},l=[],u={toc:l};function f(e){let{components:t,...n}=e;return(0,c.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"interface-accountsyncoptions"},"Interface: AccountSyncOptions"),(0,c.kt)("p",null,"Specifies what outputs should be synced for the ed25519 addresses from the account."))}f.isMDXComponent=!0}}]);