"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[10125],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=i,k=m["".concat(c,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68027:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(87462),i=(n(67294),n(3905));const r={description:"The evm core contract provides the necessary infrastructure to accept Ethereum transactions and execute EVM code.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","core","root","initialization","entry points","fees","ownership","views","reference"]},o="The `evm` Contract",l={unversionedId:"guide/core_concepts/core_contracts/evm",id:"guide/core_concepts/core_contracts/evm",title:"The `evm` Contract",description:"The evm core contract provides the necessary infrastructure to accept Ethereum transactions and execute EVM code.",source:"@site/next/external/wasp/documentation/docs/guide/core_concepts/core_contracts/evm.md",sourceDirName:"guide/core_concepts/core_contracts",slug:"/guide/core_concepts/core_contracts/evm",permalink:"/next/smart-contracts/guide/core_concepts/core_contracts/evm",draft:!1,editUrl:"https://github.com/iotaledger/wasp/edit/develop/documentation/next/external/wasp/documentation/docs/guide/core_concepts/core_contracts/evm.md",tags:[],version:"current",frontMatter:{description:"The evm core contract provides the necessary infrastructure to accept Ethereum transactions and execute EVM code.",image:"/img/logo/WASP_logo_dark.png",keywords:["smart contracts","core","root","initialization","entry points","fees","ownership","views","reference"]},sidebar:"tutorialSidebar",previous:{title:"The `errors` Contract",permalink:"/next/smart-contracts/guide/core_concepts/core_contracts/errors"},next:{title:"How Accounts Work",permalink:"/next/smart-contracts/guide/core_concepts/accounts/how-accounts-work"}},c={},s=[{value:"Entry Points",id:"entry-points",level:2},{value:"<code>init()</code>",id:"init",level:3},{value:"<code>registerERC20NativeToken</code>",id:"registererc20nativetoken",level:3},{value:"Parameters",id:"parameters",level:4},{value:"<code>registerERC20NativeTokenOnRemoteChain</code>",id:"registererc20nativetokenonremotechain",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"<code>registerERC20ExternalNativeToken</code>",id:"registererc20externalnativetoken",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"<code>registerERC721NFTCollection</code>",id:"registererc721nftcollection",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Views",id:"views",level:2},{value:"<code>getERC20ExternalNativeTokensAddress</code>",id:"geterc20externalnativetokensaddress",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Schemas",id:"schemas",level:2},{value:"<code>GenesisAlloc</code>",id:"genesisalloc",level:3}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-evm-contract"},"The ",(0,i.kt)("inlineCode",{parentName:"h1"},"evm")," Contract"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"evm")," contract is one of the ",(0,i.kt)("a",{parentName:"p",href:"/next/smart-contracts/overview"},"core contracts")," on each IOTA Smart Contracts chain."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"evm")," core contract provides the necessary infrastructure to accept Ethereum transactions and execute EVM code.\nIt also includes the implementation of the ",(0,i.kt)("a",{parentName:"p",href:"/next/smart-contracts/guide/evm/magic"},"ISC Magic contract"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"For more information about how ISC supports EVM contracts, refer to the ",(0,i.kt)("a",{parentName:"p",href:"/next/smart-contracts/guide/evm/introduction"},"EVM")," section.")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"entry-points"},"Entry Points"),(0,i.kt)("p",null,"Most entry points of the ",(0,i.kt)("inlineCode",{parentName:"p"},"evm")," core contract are meant to be accessed through the JSON-RPC service provided\nautomatically by the Wasp node so that the end users can use standard EVM tools like ",(0,i.kt)("a",{parentName:"p",href:"https://metamask.io/"},"MetaMask"),".\nWe only list the entry points not exposed through the JSON-RPC interface in this document."),(0,i.kt)("h3",{id:"init"},(0,i.kt)("inlineCode",{parentName:"h3"},"init()")),(0,i.kt)("p",null,"Called automatically when the ISC is deployed."),(0,i.kt)("p",null,"Some parameters of the ",(0,i.kt)("inlineCode",{parentName:"p"},"evm")," contract can be specified by passing them to the\n",(0,i.kt)("a",{parentName:"p",href:"/next/smart-contracts/guide/core_concepts/core_contracts/root#init"},(0,i.kt)("inlineCode",{parentName:"a"},"root")," contract ",(0,i.kt)("inlineCode",{parentName:"a"},"init")," entry point"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"evmg")," (optional ",(0,i.kt)("a",{parentName:"p",href:"#genesisalloc"},(0,i.kt)("inlineCode",{parentName:"a"},"GenesisAlloc")),"): The genesis allocation. The balance of all accounts must be 0.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"evmbk")," (optional ",(0,i.kt)("inlineCode",{parentName:"p"},"int32")," - default: keep all): Amount of EVM blocks to keep in the state.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"evmchid")," (optional ",(0,i.kt)("inlineCode",{parentName:"p"},"uint16")," - default: 1074): EVM chain iD"),(0,i.kt)("admonition",{parentName:"li",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Re-using an existing Chain ID is not recommended and can be a security risk. For serious usage, register a unique\nChain ID on ",(0,i.kt)("a",{parentName:"p",href:"https://chainlist.org/"},"Chainlist")," and use that instead of the default. ",(0,i.kt)("strong",{parentName:"p"},"It is not possible to change\nthe EVM chain ID after deployment.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"evmw")," (optional ",(0,i.kt)("a",{parentName:"p",href:"#gasratio"},(0,i.kt)("inlineCode",{parentName:"a"},"GasRatio"))," - default: ",(0,i.kt)("inlineCode",{parentName:"p"},"1:1"),"): The ISC to EVM gas ratio."))),(0,i.kt)("h3",{id:"registererc20nativetoken"},(0,i.kt)("inlineCode",{parentName:"h3"},"registerERC20NativeToken")),(0,i.kt)("p",null,"Registers an ERC20 contract to act as a proxy for the native tokens, at address\n",(0,i.kt)("inlineCode",{parentName:"p"},"0x107402xxxxxxxx00000000000000000000000000"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"xxxxxxxx")," is the\nlittle-endian encoding of the foundry serial number."),(0,i.kt)("p",null,"Only the foundry owner can call this endpoint."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fs")," (",(0,i.kt)("inlineCode",{parentName:"li"},"uint32"),"): The foundry serial number"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The token name"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"t")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The ticker symbol"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"d")," (",(0,i.kt)("inlineCode",{parentName:"li"},"uint8"),"): The token decimals")),(0,i.kt)("h3",{id:"registererc20nativetokenonremotechain"},(0,i.kt)("inlineCode",{parentName:"h3"},"registerERC20NativeTokenOnRemoteChain")),(0,i.kt)("p",null,"Registers an ERC20 contract to act as a proxy for the native tokens ",(0,i.kt)("strong",{parentName:"p"},"on another\nchain"),"."),(0,i.kt)("p",null,"The foundry must be controlled by this chain. Only the foundry owner can call\nthis endpoint."),(0,i.kt)("p",null,"This endpoint is intended to be used in case the foundry is controlled by chain\nA, and the owner of the foundry wishes to register the ERC20 contract on chain\nB. In that case, the owner must call this endpoint on chain A with ",(0,i.kt)("inlineCode",{parentName:"p"},"target =\nchain B"),". The request to chain B is then sent as an on-ledger request.\nAfter a few minutes, call\n",(0,i.kt)("a",{parentName:"p",href:"#geterc20externalnativetokensaddress"},(0,i.kt)("inlineCode",{parentName:"a"},"getERC20ExternalNativeTokensAddress")),"\non chain B to find out the address of the ERC20 contract."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fs")," (",(0,i.kt)("inlineCode",{parentName:"li"},"uint32"),"): The foundry serial number"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The token name"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"t")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The ticker symbol"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"d")," (",(0,i.kt)("inlineCode",{parentName:"li"},"uint8"),"): The token decimals"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"A")," (",(0,i.kt)("inlineCode",{parentName:"li"},"uint8"),"): The target chain address, where the ERC20 contract will be\nregistered.")),(0,i.kt)("h3",{id:"registererc20externalnativetoken"},(0,i.kt)("inlineCode",{parentName:"h3"},"registerERC20ExternalNativeToken")),(0,i.kt)("p",null,"Registers an ERC20 contract to act as a proxy for the native tokens."),(0,i.kt)("p",null,"Only an alias address can call this endpoint."),(0,i.kt)("p",null,"If the foundry is controlled by another ISC chain, the foundry owner can call\n",(0,i.kt)("a",{parentName:"p",href:"#registererc20nativetokenonchain"},(0,i.kt)("inlineCode",{parentName:"a"},"registerERC20NativeTokenOnRemoteChain")),"\non that chain, which will automatically call this endpoint on the chain set as\ntarget."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fs")," (",(0,i.kt)("inlineCode",{parentName:"li"},"uint32"),"): The foundry serial number"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The token name"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"t")," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The ticker symbol"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"d")," (",(0,i.kt)("inlineCode",{parentName:"li"},"uint8"),"): The token decimals"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"T")," (",(0,i.kt)("inlineCode",{parentName:"li"},"TokenScheme"),"): The native token scheme")),(0,i.kt)("h3",{id:"registererc721nftcollection"},(0,i.kt)("inlineCode",{parentName:"h3"},"registerERC721NFTCollection")),(0,i.kt)("p",null,"Registers an ERC20 contract to act as a proxy for an NFT collection, at address\n",(0,i.kt)("inlineCode",{parentName:"p"},"0x107404xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"xxx...")," is the first 17\nbytes of the collection ID."),(0,i.kt)("p",null,"The call will fail if the address is taken by another collection with the same prefix."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"C")," (",(0,i.kt)("inlineCode",{parentName:"li"},"NTFID"),"): The collection ID")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"views"},"Views"),(0,i.kt)("h3",{id:"geterc20externalnativetokensaddress"},(0,i.kt)("inlineCode",{parentName:"h3"},"getERC20ExternalNativeTokensAddress")),(0,i.kt)("p",null,"Returns the address of an ERC20 contract registered with\n",(0,i.kt)("a",{parentName:"p",href:"#registererc20nativetokenonchain"},(0,i.kt)("inlineCode",{parentName:"a"},"registerERC20NativeTokenOnRemoteChain")),"."),(0,i.kt)("p",null,"Only the foundry owner can call this endpoint."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"N")," (",(0,i.kt)("inlineCode",{parentName:"li"},"NativeTokenID"),"): The native token ID")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"schemas"},"Schemas"),(0,i.kt)("h3",{id:"genesisalloc"},(0,i.kt)("inlineCode",{parentName:"h3"},"GenesisAlloc")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GenesisAlloc")," is encoded as the concatenation of:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Amount of accounts ",(0,i.kt)("inlineCode",{parentName:"li"},"n")," (",(0,i.kt)("inlineCode",{parentName:"li"},"uint32"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"n")," times:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Ethereum address (",(0,i.kt)("inlineCode",{parentName:"li"},"[]byte")," prefixed with ",(0,i.kt)("inlineCode",{parentName:"li"},"uint32")," size)."),(0,i.kt)("li",{parentName:"ul"},"Account code (",(0,i.kt)("inlineCode",{parentName:"li"},"[]byte")," prefixed with ",(0,i.kt)("inlineCode",{parentName:"li"},"uint32")," size)."),(0,i.kt)("li",{parentName:"ul"},"Amount of storage key/value pairs ",(0,i.kt)("inlineCode",{parentName:"li"},"m"),"(",(0,i.kt)("inlineCode",{parentName:"li"},"uint32"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"m")," times:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Key (",(0,i.kt)("inlineCode",{parentName:"li"},"[]byte")," prefixed with ",(0,i.kt)("inlineCode",{parentName:"li"},"uint32")," size)."),(0,i.kt)("li",{parentName:"ul"},"Value(",(0,i.kt)("inlineCode",{parentName:"li"},"[]byte")," prefixed with ",(0,i.kt)("inlineCode",{parentName:"li"},"uint32")," size)."))),(0,i.kt)("li",{parentName:"ul"},"Account balance (must be 0)(",(0,i.kt)("inlineCode",{parentName:"li"},"[]byte")," prefixed with ",(0,i.kt)("inlineCode",{parentName:"li"},"uint32")," size)."),(0,i.kt)("li",{parentName:"ul"},"Account nonce  (",(0,i.kt)("inlineCode",{parentName:"li"},"uint64"),")."),(0,i.kt)("li",{parentName:"ul"},"Account private key (may be used for tests)(",(0,i.kt)("inlineCode",{parentName:"li"},"uint64"),").")))))}d.isMDXComponent=!0}}]);