"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[51364],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(n),u=a,g=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},93505:(e,t,n)=>{n.d(t,{ZP:()=>o});var r=n(87462),a=(n(67294),n(3905));const i={toc:[]};function o(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"Password Storage",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Never store passwords or seeds on a host's environment variables or in the source code in a production\nsetup. Please follow our ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.iota.org/introduction/guides/backup_security"},"backup and security"),"\nrecommendations for production use.")))}o.isMDXComponent=!0},41712:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905)),i=n(93505);const o={title:"Getting Started With Java",description:"Getting started with the official IOTA Client Java library.",image:"/img/logo/iota_mark_light.png",keywords:["Java","jar","Maven","Gradle"]},p=void 0,s={unversionedId:"getting_started/java",id:"getting_started/java",title:"Getting Started With Java",description:"Getting started with the official IOTA Client Java library.",source:"@site/next/external/iota.rs/documentation/docs/getting_started/java.mdx",sourceDirName:"getting_started",slug:"/getting_started/java",permalink:"/next/iota.rs/getting_started/java",draft:!1,editUrl:"https://github.com/iotaledger/iota.rs/edit/develop/documentation/next/external/iota.rs/documentation/docs/getting_started/java.mdx",tags:[],version:"current",frontMatter:{title:"Getting Started With Java",description:"Getting started with the official IOTA Client Java library.",image:"/img/logo/iota_mark_light.png",keywords:["Java","jar","Maven","Gradle"]},sidebar:"docs",previous:{title:"Getting Started With Node.js",permalink:"/next/iota.rs/getting_started/nodejs"},next:{title:"Getting Started With Python",permalink:"/next/iota.rs/getting_started/python"}},l={},c=[],d={toc:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(i.ZP,{mdxType:"WarningPasswordStorage"}),(0,a.kt)("p",null,(0,a.kt)("h1",{parentName:"p"},"IOTA Client Java Library"),(0,a.kt)("p",{parentName:"p"},"Get started with the official IOTA Client Java Library."),(0,a.kt)("h2",{parentName:"p"},"Requirements"),(0,a.kt)("p",{parentName:"p"},"Minimum Java version: Java 8"),(0,a.kt)("h2",{parentName:"p"},"Use in your Android project (Android Studio)"),(0,a.kt)("ol",{parentName:"p"},(0,a.kt)("li",{parentName:"ol"},"Download the ",(0,a.kt)("inlineCode",{parentName:"li"},"iota-client-1.0.0-rc.1.jar")," file from the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/iotaledger/iota.rs/releases/tag/iota-client-java-1.0.0-rc.1"},"GitHub release")," and add it as a library to your project."),(0,a.kt)("li",{parentName:"ol"},"Download the ",(0,a.kt)("inlineCode",{parentName:"li"},"iota-client-1.0.0-rc.1-android.zip")," file from the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/iotaledger/iota.rs/releases/tag/iota-client-java-1.0.0-rc.1"},"GitHub release"),", unzip it and add the ",(0,a.kt)("inlineCode",{parentName:"li"},"jniLibs")," folder with its contents to your Android Studio project as shown below:")),(0,a.kt)("pre",{parentName:"p"},(0,a.kt)("code",{parentName:"pre"},"project/\n\u251c\u2500\u2500libs/\n|  \u2514\u2500\u2500 *.jar <-- if your library has jar files, they go here\n\u251c\u2500\u2500src/\n   \u2514\u2500\u2500 main/\n       \u251c\u2500\u2500 AndroidManifest.xml\n       \u251c\u2500\u2500 java/\n       \u2514\u2500\u2500 jniLibs/ \n           \u251c\u2500\u2500 arm64-v8a/           <-- ARM 64bit\n           \u2502   \u2514\u2500\u2500 libiota-client.so\n           \u2502   \u2514\u2500\u2500 libc++_shared.so\n           \u251c\u2500\u2500 armeabi-v7a/         <-- ARM 32bit\n           \u2502   \u2514\u2500\u2500 libiota-client.so\n           \u2502   \u2514\u2500\u2500 libc++_shared.so\n           \u2502\u2500\u2500 x86/                 <-- Intel 32bit\n           \u2502  \u2514\u2500\u2500 libiota-client.so\n           \u2502  \u2514\u2500\u2500 libc++_shared.so\n           \u2514\u2500\u2500 x86_64/              <-- Intel 64bit\n              \u2514\u2500\u2500 libiota-client.so\n              \u2514\u2500\u2500 libc++_shared.so\n")),(0,a.kt)("h2",{parentName:"p"},"Use in your Java project (Linux, macOS, Windows)"),(0,a.kt)("p",{parentName:"p"},"Depending on your operating system, add one of the following dependencies to your ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle")," file:"),(0,a.kt)("h4",{parentName:"p"},"linux-x86_64"),(0,a.kt)("pre",{parentName:"p"},(0,a.kt)("code",{parentName:"pre"},"implementation 'org.iota:iota-client:1.0.0-rc.1:linux-x86_64'\n")),(0,a.kt)("h4",{parentName:"p"},"windows-x86_64"),(0,a.kt)("pre",{parentName:"p"},(0,a.kt)("code",{parentName:"pre"},"implementation 'org.iota:iota-client:1.0.0-rc.1:windows-x86_64'\n")),(0,a.kt)("h4",{parentName:"p"},"aarch64-apple-darwin"),(0,a.kt)("pre",{parentName:"p"},(0,a.kt)("code",{parentName:"pre"},"implementation 'org.iota:iota-client:1.0.0-rc.1:aarch64-apple-darwin'\n")),(0,a.kt)("h4",{parentName:"p"},"osx-x86_64"),(0,a.kt)("pre",{parentName:"p"},(0,a.kt)("code",{parentName:"pre"},"implementation 'org.iota:iota-client:1.0.0-rc.1:osx-x86_64'\n")),(0,a.kt)("h2",{parentName:"p"},"Use the Library"),(0,a.kt)("p",{parentName:"p"},"In order to use the library, you need to create a ",(0,a.kt)("inlineCode",{parentName:"p"},"Client")," instance as illustrated below:"),(0,a.kt)("pre",{parentName:"p"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},'import org.iota.Client;\nimport org.iota.types.ClientConfig;\nimport org.iota.types.expections.InitializeClientException;\nimport org.iota.types.expections.ClientException;\nimport org.iota.types.responses.NodeInfoResponse;\n\npublic class HelloWorld {\n    public static void main(String[] args) throws InitializeClientException, ClientException {\n        // Build the client.\n        Client client = new Client(new ClientConfig().withNodes(new String[]{"https://api.testnet.shimmer.network"}));\n\n        // Get the node information for a given node.\n        NodeInfoResponse response = client.getNodeInfo();\n\n        // Print the URL of the node that was requested.\n        System.out.println(response.getNodeUrl());\n\n        // Print the node information for the requested node.\n        System.out.println(response.getNodeInfo());\n    }\n}\n')),(0,a.kt)("h2",{parentName:"p"},"What's Next?"),(0,a.kt)("p",{parentName:"p"},"Now that you are up and running, you can get acquainted with the library using\nits ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/iota.rs/how_tos/run_how_tos/"},"how-to guides")," and the\nrepository's ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.rs/tree/develop/client/bindings/java/examples/src"},"code examples"),".")))}m.isMDXComponent=!0}}]);