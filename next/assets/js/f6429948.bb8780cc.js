"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[79399],{3905:(t,e,n)=>{n.d(e,{Zo:()=>l,kt:()=>m});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var u=a.createContext({}),c=function(t){var e=a.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},l=function(t){var e=c(t.components);return a.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,u=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(h,o(o({ref:e},l),{},{components:n})):a.createElement(h,o({ref:e},l))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=t,s.mdxType="string"==typeof t?t:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},76944:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={description:"Get acquainted with the structure and functionality of transactions in IOTA's Stardust protocol in the Shimmer network using iota.js primitives to issue transactions involving Alias Outputs.",image:"/img/client_banner.png",keywords:["tutorial","UTXO","alias","shimmer","ledger","outputs","inputs"]},o="Stardust for iota.js: Alias Transactions",s={unversionedId:"tutorials/alias-transactions/introduction",id:"tutorials/alias-transactions/introduction",title:"Stardust for iota.js: Alias Transactions",description:"Get acquainted with the structure and functionality of transactions in IOTA's Stardust protocol in the Shimmer network using iota.js primitives to issue transactions involving Alias Outputs.",source:"@site/next/external/iota.js/documentation/docs/tutorials/alias-transactions/01-introduction.md",sourceDirName:"tutorials/alias-transactions",slug:"/tutorials/alias-transactions/introduction",permalink:"/next/iotajs/tutorials/alias-transactions/introduction",draft:!1,editUrl:"https://github.com/iotaledger/iota.js/tree/dev/packages/iota/documentation/next/external/iota.js/documentation/docs/tutorials/alias-transactions/01-introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{description:"Get acquainted with the structure and functionality of transactions in IOTA's Stardust protocol in the Shimmer network using iota.js primitives to issue transactions involving Alias Outputs.",image:"/img/client_banner.png",keywords:["tutorial","UTXO","alias","shimmer","ledger","outputs","inputs"]}},u={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Storage Costs and Deposits",id:"storage-costs-and-deposits",level:2}],l={toc:c};function p(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stardust-for-iotajs-alias-transactions"},"Stardust for iota.js: Alias Transactions"),(0,r.kt)("p",null,"This tutorial will get you acquainted with the structure and functionality of ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/introduction/explanations/ledger/alias"},"Alias Transactions")," in\nIOTA's ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/introduction/welcome"},"Stardust protocol")," in\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://shimmer.network"},"Shimmer network")," using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.js"},"iota.js")," primitives to\nissue transactions that involve Alias Output."),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Starting from ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.iota.org/introduction/welcome"},"Chrysalis"),", IOTA is\na ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.iota.org/introduction/reference/details#unspent-transaction-output-utxo"},"UTXO-based (Unspent Transaction Output)"),"\nLedger. Each UTXO, also known as  ",(0,r.kt)("strong",{parentName:"p"},"output"),", has an associated number of tokens that determines its value.\nThus, the permanent data on the ledger is composed of a set of records (",(0,r.kt)("em",{parentName:"p"},"outputs"),") that can be unlocked by the owner of\nits associated address, i.e., the one who knows the address' private key."),(0,r.kt)("p",null,"There are different ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/learn/outputs"},"output types"),". This tutorial series will only focus on\n",(0,r.kt)("strong",{parentName:"p"},"Alias Outputs")," known as ",(0,r.kt)("a",{parentName:"p",href:"/next/iotajs/references/client/interfaces/IAliasOutput"},(0,r.kt)("inlineCode",{parentName:"a"},"IAliasOutput")),". Alias Outputs are\ngenerated by transactions that unlock and consume already existing outputs. When a transaction consumes them, these\noutputs turn into inputs and generate new outputs, typically another Alias Output with the same Alias ID but in a different state. At pruning time, ",(0,r.kt)("em",{parentName:"p"},"consumed outputs")," will be removed by Nodes."),(0,r.kt)("h2",{id:"storage-costs-and-deposits"},"Storage Costs and Deposits"),(0,r.kt)("p",null,"You need to take into account that Alias Output as any other UTXOs need to be stored by ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/hornet/welcome"},"Hornet Nodes"),", so there is a ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/iotajs/tutorials/value-transactions/introduction/#storage-costs-and-deposits"},"storage cost"),"."))}p.isMDXComponent=!0}}]);