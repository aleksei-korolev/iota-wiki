"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[78163],{70185:(e,t,n)=>{n.d(t,{ZP:()=>r});var a=n(87462),o=(n(67294),n(3905));const s={toc:[]};function r(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Online Faucet",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can request test funds from the ",(0,o.kt)("a",{parentName:"p",href:"https://faucet.testnet.shimmer.network/"},"Shimmer Testnet Faucet"),".")))}r.isMDXComponent=!0},11332:(e,t,n)=>{n.d(t,{ZP:()=>r});var a=n(87462),o=(n(67294),n(3905));const s={toc:[]};function r(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Dotenv",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"This example uses dotenv, which is not safe for use in production environments.")))}r.isMDXComponent=!0},20975:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>E,contentTitle:()=>N,default:()=>S,frontMatter:()=>q,metadata:()=>A,toc:()=>Z});var a=n(87462),o=(n(67294),n(3905)),s=n(34259),r=n(18679),l=n(69319);const c={toc:[]};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{className:"language-typescript",mdxType:"CodeBlock"},"/**\n * This example will request funds from a faucet\n */\nconst getUnlockedManager = require('./account-manager');\n\nasync function run() {\n    try {\n        const manager = await getUnlockedManager();\n\n        const account = await manager.getAccount('0');\n\n        const addressObject = (await account.addresses())[0];\n\n        if (!process.env.FAUCET_URL) {\n            throw new Error('.env FAUCET_URL is undefined, see .env.example');\n        }\n\n        const faucetResponse = await account.requestFundsFromFaucet(process.env.FAUCET_URL, addressObject.address);\n\n        console.log(faucetResponse);\n    } catch (error) {\n        console.log('Error: ', error);\n    }\n    process.exit(0);\n}\n\nrun();\n"),(0,o.kt)("p",null,"You can run the example by running the following command from the ",(0,o.kt)("inlineCode",{parentName:"p"},"bindings/node/examples/")," folder:"),(0,o.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"node 33-request-funds.js"))}u.isMDXComponent=!0;const i={toc:[]};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'{"address":"rms1qzrux5tuhpfrc84gwau7ldg0xjvnkuheg3pnmjx94jrpah8rqqmuz3crlzm","waitingRequests":1}\n')))}d.isMDXComponent=!0;const p={toc:[]};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{className:"language-java",mdxType:"CodeBlock"},'from iota_wallet import IotaWallet\n\nimport time\n\n# This example requests funds from the faucet\n\nwallet = IotaWallet(\'./alice-database\')\n\naccount = wallet.get_account(\'Alice\')\n\n# Sync account with the node\nresponse = account.sync()\nprint(f\'Synced: {response}\')\n\n# Balance before funding\nbalance = account.get_balance()\nprint(f\'balance before faucet request: { balance[ "baseCoin" ][ "available" ] }\')\n\nresponse = account.request_funds_from_faucet("https://faucet.testnet.shimmer.network/api/enqueue", "rms1qpszqzadsym6wpppd6z037dvlejmjuke7s24hm95s9fg9vpua7vluaw60xu")\n\ntime.sleep(20)\n\n# Sync account with the node\nresponse = account.sync()\n\n# Balance after funding\nbalance = account.get_balance()\nprint(f\'balance after faucet request: { balance[ "baseCoin" ][ "available" ] }\')'))}m.isMDXComponent=!0;const h={toc:[]};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"balance before faucet request: 0\navailable account balance after faucet request: 1000000000\n")))}f.isMDXComponent=!0;const g={toc:[]};function y(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{className:"language-java",mdxType:"CodeBlock"},'// Copyright 2022 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\nimport org.iota.Wallet;\nimport org.iota.types.*;\nimport org.iota.types.account_methods.SyncAccount;\nimport org.iota.types.exceptions.InitializeWalletException;\nimport org.iota.types.exceptions.NoFundsReceivedFromFaucetException;\nimport org.iota.types.exceptions.WalletException;\nimport org.iota.types.ids.account.AccountAlias;\nimport org.iota.types.secret.StrongholdSecretManager;\n\npublic class RequestFundsFromFaucet {\n    \n    public static void main(String[] args) throws WalletException, InterruptedException, InitializeWalletException, NoFundsReceivedFromFaucetException {\n        // This example assumes that a wallet has already been created using the \xb4SetupWallet.java\xb4 example.\n        // If you haven\'t run the \xb4SetupWallet.java\xb4 example yet, you must run it first to be able to load the wallet as shown below:\n        Wallet wallet = new Wallet(new WalletConfig()\n                .withClientOptions(new ClientConfig().withNodes(Env.NODE))\n                .withSecretManager(new StrongholdSecretManager(Env.STRONGHOLD_PASSWORD, null, Env.STRONGHOLD_VAULT_PATH))\n                .withCoinType(CoinType.Shimmer)\n                .withStoragePath(Env.STORAGE_PATH)\n        );\n\n        // Get account and sync it with the registered node to ensure that its balances are up-to-date.\n        AccountHandle a = wallet.getAccount(new AccountAlias(Env.ACCOUNT_NAME));\n        AccountBalance balance = a.syncAccount(new SyncAccount().withOptions(new SyncOptions()));\n\n        // Print the account balance before asking the faucet for funds.\n        System.out.println("available account balance before faucet request: " + balance.getBaseCoin().getAvailable());\n\n        // Get an address to fund.\n        String address = a.getAddresses()[0].getAddress();\n\n        // Syncs the account with the provided sync options and request funds from the faucet.\n        a.requestFundsFromFaucet(new org.iota.types.account_methods.RequestFundsFromFaucet("https://faucet.testnet.shimmer.network/api/enqueue", address), 10000000, new SyncOptions());\n\n        // Print the account balance after asking the faucet for funds.\n        System.out.println("available account balance after faucet request: " + a.syncAccount(new SyncAccount()).getBaseCoin().getAvailable());\n\n        // In case you are done and don\'t need the wallet instance anymore you can destroy the instance to clean up memory.\n        // For this, check out the \xb4DestroyWallet.java\xb4 example.\n    }\n\n}'))}y.isMDXComponent=!0;const w={toc:[]};function v(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"available account balance before faucet request: 0\navailable account balance after faucet request: 1000000000\n")))}v.isMDXComponent=!0;var k=n(11332);const b={toc:[{value:"Run the Example",id:"run-the-example",level:3}]};function _(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(k.ZP,{mdxType:"DotEnvWarning"}),(0,o.kt)(l.Z,{className:"language-rust",mdxType:"CodeBlock"},'// Copyright 2021 IOTA Stiftung\n// SPDX-License-Identifier: Apache-2.0\n\n//! cargo run --example get_funds --release\n// In this example we request funds from the faucet to our address\n// Rename `.env.example` to `.env` first\n\nuse std::env;\n\nuse dotenv::dotenv;\nuse iota_client::request_funds_from_faucet;\nuse iota_wallet::{account_manager::AccountManager, Result};\n\n#[tokio::main]\nasync fn main() -> Result<()> {\n    // This example uses dotenv, which is not safe for use in production\n    dotenv().ok();\n\n    // Create the account manager\n    let manager = AccountManager::builder().finish().await?;\n\n    // Get the account we generated with `01_create_wallet`\n    let account = manager.get_account("Alice").await?;\n\n    let address = account.addresses().await?;\n\n    let faucet_response =\n        request_funds_from_faucet(&env::var("FAUCET_URL").unwrap(), &address[0].address().to_bech32()).await?;\n\n    println!("{faucet_response}");\n\n    Ok(())\n}\n'),(0,o.kt)("h3",{id:"run-the-example"},"Run the Example"),(0,o.kt)("p",null,"Run the example by running the following command:"),(0,o.kt)(l.Z,{className:"language-bash",mdxType:"CodeBlock"},"cargo run --example get_funds --release"))}_.isMDXComponent=!0;const x={toc:[]};function T(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},x,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},'{\n  "address": "tst1qpllaj0pyveqfkwxmnngz2c488hfdtmfrj3wfkgxtk4gtyrax0jax7rgxyj",\n  "waitingRequests": 1\n}\n')))}T.isMDXComponent=!0;var C=n(70185);const q={title:"Request Funds",description:"How to programmatically request testnet funds.",image:"/img/logo/iota_mark_light.png",keywords:["how to","faucet","testnet","test funds","nodejs","python","java","rust"]},N=void 0,A={unversionedId:"how_tos/accounts_and_addresses/request_funds",id:"how_tos/accounts_and_addresses/request_funds",title:"Request Funds",description:"How to programmatically request testnet funds.",source:"@site/shimmer/external/wallet.rs/documentation/docs/how_tos/accounts_and_addresses/03_request_funds.mdx",sourceDirName:"how_tos/accounts_and_addresses",slug:"/how_tos/accounts_and_addresses/request_funds",permalink:"/shimmer/wallet.rs/how_tos/accounts_and_addresses/request_funds",draft:!1,editUrl:"https://github.com/iotaledger/wallet.rs/edit/develop/documentation/shimmer/external/wallet.rs/documentation/docs/how_tos/accounts_and_addresses/03_request_funds.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Request Funds",description:"How to programmatically request testnet funds.",image:"/img/logo/iota_mark_light.png",keywords:["how to","faucet","testnet","test funds","nodejs","python","java","rust"]},sidebar:"docs",previous:{title:"Generate an Address",permalink:"/shimmer/wallet.rs/how_tos/accounts_and_addresses/generate_address"},next:{title:"Check Balance",permalink:"/shimmer/wallet.rs/how_tos/accounts_and_addresses/check_balance"}},E={},Z=[{value:"Code Example",id:"code-example",level:2},{value:"Expected Output",id:"expected-output",level:2}],D={toc:Z};function S(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},D,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Once you have ",(0,o.kt)("a",{parentName:"p",href:"/shimmer/wallet.rs/how_tos/accounts_and_addresses/create_a_wallet_account"},"created your account"),",\nyou can start using wallet.rs for value transactions. Since these examples target the testnet, you can request funds\nusing the ",(0,o.kt)("inlineCode",{parentName:"p"},"request_funds_from_faucet")," function."),(0,o.kt)(C.ZP,{mdxType:"TipFaucet"}),(0,o.kt)("h2",{id:"code-example"},"Code Example"),(0,o.kt)("p",null,"The following example will:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create an account manager."),(0,o.kt)("li",{parentName:"ol"},"Get Alice's account which was ",(0,o.kt)("a",{parentName:"li",href:"/shimmer/wallet.rs/how_tos/accounts_and_addresses/create_a_wallet_account"},"created in the first guide"),"."),(0,o.kt)("li",{parentName:"ol"},"Retrieve an ",(0,o.kt)("a",{parentName:"li",href:"/shimmer/wallet.rs/how_tos/accounts_and_addresses/generate_address"},"address")," related to Alice's account."),(0,o.kt)("li",{parentName:"ol"},"Request funds to the ",(0,o.kt)("inlineCode",{parentName:"li"},"FAUCET_URL")," you defined in the ",(0,o.kt)("inlineCode",{parentName:"li"},".env")," file.")),(0,o.kt)(s.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(_,{mdxType:"RustCode"})),(0,o.kt)(r.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(u,{mdxType:"NodejsCode"})),(0,o.kt)(r.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(m,{mdxType:"PythonCode"})),(0,o.kt)(r.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)(y,{mdxType:"JavaCode"}))),(0,o.kt)("h2",{id:"expected-output"},"Expected Output"),(0,o.kt)(s.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,o.kt)(T,{mdxType:"RustOutput"})),(0,o.kt)(r.Z,{value:"nodejs",label:"Nodejs",mdxType:"TabItem"},(0,o.kt)(d,{mdxType:"NodejsOutput"})),(0,o.kt)(r.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,o.kt)(f,{mdxType:"PythonOutput"})),(0,o.kt)(r.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)(v,{mdxType:"JavaOutput"}))))}S.isMDXComponent=!0},18679:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(67294),o=n(86010);const s="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(s,r),hidden:n},t)}},34259:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),o=n(67294),s=n(86010),r=n(51048),l=n(33609),c=n(1943),u=n(72957);const i="tabList__CuJ",d="tabItem_LNqP";function p(e){var t;const{lazy:n,block:r,defaultValue:p,values:m,groupId:h,className:f}=e,g=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=m??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),w=(0,l.l)(y,((e,t)=>e.value===t.value));if(w.length>0)throw new Error(`Docusaurus error: Duplicate values "${w.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===p?p:p??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:b}=(0,c.U)(),[_,x]=(0,o.useState)(v),T=[],{blockElementScrollPositionUntilNextRender:C}=(0,u.o5)();if(null!=h){const e=k[h];null!=e&&e!==_&&y.some((t=>t.value===e))&&x(e)}const q=e=>{const t=e.currentTarget,n=T.indexOf(t),a=y[n].value;a!==_&&(C(t),x(a),null!=h&&b(h,String(a)))},N=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,s.Z)("tabs-container",i)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},f)},y.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:_===t?0:-1,"aria-selected":_===t,key:t,ref:e=>T.push(e),onKeyDown:N,onFocus:q,onClick:q},r,{className:(0,s.Z)("tabs__item",d,null==r?void 0:r.className,{"tabs__item--active":_===t})}),n??t)}))),n?(0,o.cloneElement)(g.filter((e=>e.props.value===_))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==_})))))}function m(e){const t=(0,r.Z)();return o.createElement(p,(0,a.Z)({key:String(t)},e))}}}]);