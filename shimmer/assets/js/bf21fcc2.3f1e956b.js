"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[35484],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>h});var o=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,o,a=function(t,e){if(null==t)return{};var n,o,a={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var u=o.createContext({}),l=function(t){var e=o.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=l(t.components);return o.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},d=o.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,u=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),d=l(n),h=a,m=d["".concat(u,".").concat(h)]||d[h]||p[h]||r;return n?o.createElement(m,i(i({ref:e},c),{},{components:n})):o.createElement(m,i({ref:e},c))}));function h(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var u in e)hasOwnProperty.call(e,u)&&(s[u]=e[u]);s.originalType=t,s.mdxType="string"==typeof t?t:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},55327:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(87462),a=(n(67294),n(3905));const r={description:"Update an NFT\u2019s state using a transaction with iota.js.",image:"/img/client_banner.png",keywords:["tutorial","NFT","output","transaction"]},i="Create an NFT Transaction",s={unversionedId:"tutorials/nft-transactions/nft-transaction",id:"tutorials/nft-transactions/nft-transaction",title:"Create an NFT Transaction",description:"Update an NFT\u2019s state using a transaction with iota.js.",source:"@site/shimmer/external/iota.js/documentation/docs/tutorials/nft-transactions/04-nft-transaction.md",sourceDirName:"tutorials/nft-transactions",slug:"/tutorials/nft-transactions/nft-transaction",permalink:"/shimmer/iotajs/tutorials/nft-transactions/nft-transaction",draft:!1,editUrl:"https://github.com/iotaledger/iota.js/tree/dev/packages/iota/documentation/shimmer/external/iota.js/documentation/docs/tutorials/nft-transactions/04-nft-transaction.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{description:"Update an NFT\u2019s state using a transaction with iota.js.",image:"/img/client_banner.png",keywords:["tutorial","NFT","output","transaction"]},sidebar:"docs",previous:{title:"Mint a New NFT",permalink:"/shimmer/iotajs/tutorials/nft-transactions/mint-new-nft"},next:{title:"Claim NFT Under Conditional Transfer",permalink:"/shimmer/iotajs/tutorials/nft-transactions/claim-nft"}},u={},l=[{value:"Preparation",id:"preparation",level:2},{value:"Query For the NFT Output",id:"query-for-the-nft-output",level:2},{value:"Set the New Unlock Conditions",id:"set-the-new-unlock-conditions",level:2},{value:"Define the Transaction",id:"define-the-transaction",level:2},{value:"Add the Unlock Conditions",id:"add-the-unlock-conditions",level:3},{value:"Define the Transaction Essence",id:"define-the-transaction-essence",level:3},{value:"Add the Unlock Conditions to the New NFT Output",id:"add-the-unlock-conditions-to-the-new-nft-output",level:3},{value:"Submit the Block",id:"submit-the-block",level:2},{value:"Putting It All Together",id:"putting-it-all-together",level:2}],c={toc:l};function p(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-an-nft-transaction"},"Create an NFT Transaction"),(0,a.kt)("p",null,"The owner of an NFT can perform transactions that change the NFT\u2019s mutable fields to a new state. The transaction\ngenerates a new NFT Output with the same NFT ID as the original. Remember that the NFT ID remains constant regardless of\nthe NFT Output that holds the funds and the NFT metadata. The ",(0,a.kt)("strong",{parentName:"p"},"NFT Output Id"),' changes once it is "spent" and pruned\nfrom the ledger.'),(0,a.kt)("p",null,"This section will show you how to issue a transaction that will transfer the ownership of your NFT to a different\naddress. Since you probably want to recover the tokens you used to cover\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/iotajs/tutorials/value-transactions/introduction/#storage-costs-and-deposits"},"storage deposits"),",\nthis code example includes an\nadditional ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/introduction/explanations/what_is_stardust/unlock_conditions/#storage-deposit-return"},"storage deposit return")," ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/introduction/explanations/what_is_stardust/unlock_conditions/"},"unlock condition"),"\nto the NFT Output."),(0,a.kt)("h2",{id:"preparation"},"Preparation"),(0,a.kt)("p",null,"To create this transaction, you will need the following:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A Shimmer Node. You can use the ",(0,a.kt)("a",{parentName:"p",href:"https://api.testnet.shimmer.network"},"Shimmer Testnet nodes"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The NFT ID of your NFT, in hexadecimal format ",(0,a.kt)("inlineCode",{parentName:"p"},"0x7d08..."),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The keys of the address that controls your NFT."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'const client = new SingleNodeClient(API_ENDPOINT, {powProvider: new NeonPowProvider()});\nconst nodeInfo = await client.info();\n\nconst nftOwnerAddr = "0x62c0...";\nconst nftOwnerPubKey = "0x91db...";\nconst nftOwnerPrivateKey = "0x22f6...";\n\nconst nftBuyerAddr = "0x57d3...";\n')),(0,a.kt)("h2",{id:"query-for-the-nft-output"},"Query For the NFT Output"),(0,a.kt)("p",null,"You will first need to query for the NFT Output of your NFT. The easiest way to do so is through a query to\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.iota.org/shimmer/inx-indexer/welcome/"},"indexation plugin")," by NFT ID. You need to obtain the full\nOutput details as you need to use them as input for the transaction."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'const indexerPlugin = new IndexerPluginClient(client);\nconst outputList = await indexerPlugin.nft(nftId);\nif (outputList.items.length === 0) {\n    throw new Error("NFT not found");\n}\nconst consumedOutputId = outputList.items[0];\nconsole.log("Consumed Output Id", consumedOutputId);\n\nconst initialNftOutputDetails = await client.output(consumedOutputId);\nconst initialNftOutput: INftOutput = initialNftOutputDetails.output as INftOutput;\n')),(0,a.kt)("h2",{id:"set-the-new-unlock-conditions"},"Set the New Unlock Conditions"),(0,a.kt)("p",null,"Once you have ",(0,a.kt)("a",{parentName:"p",href:"#query-for-the-nft-output"},"queried for the NFT output"),", you should create the new NFT Output by cloning\nit, and then set the two new unlock conditions:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"The ",(0,a.kt)("a",{parentName:"li",href:"https://wiki.iota.org/shimmer/introduction/explanations/what_is_stardust/unlock_conditions/#address"},"address"),"\ncorresponding to the new owner of the NFT (for instance, the buyer of the NFT)."),(0,a.kt)("li",{parentName:"ol"},"A ",(0,a.kt)("a",{parentName:"li",href:"https://wiki.iota.org/shimmer/introduction/explanations/what_is_stardust/unlock_conditions/#storage-deposit-return"},"storage deposit unlock condition"),"\nthat will allow you to get a refund of the storage costs of the NFT Output. That way, the ",(0,a.kt)("inlineCode",{parentName:"li"},"SMR")," tokens you used to cover\nthe storage costs will be refunded whenever the new owner of the NFT decides to unlock it.")),(0,a.kt)("h2",{id:"define-the-transaction"},"Define the Transaction"),(0,a.kt)("h3",{id:"add-the-unlock-conditions"},"Add the Unlock Conditions"),(0,a.kt)("p",null,"Now, you are ready to define the transaction. You should assign the correct ",(0,a.kt)("inlineCode",{parentName:"p"},"nftId")," to your new NFT Output."),(0,a.kt)("p",null,"As you add more unlock conditions, the storage deposit of the NFT Output increases, but that will be covered with the\nextra funds you supplied when you ",(0,a.kt)("a",{parentName:"p",href:"/shimmer/iotajs/tutorials/nft-transactions/mint-new-nft"},"minted the NFT"),". Remember that the amount was double the minimum\none."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const nextNftOutput: INftOutput = JSON.parse(JSON.stringify(initialNftOutput));\nnextNftOutput.unlockConditions = [\n    {\n        type: ADDRESS_UNLOCK_CONDITION_TYPE,\n        address: {\n            type: ED25519_ADDRESS_TYPE,\n            pubKeyHash: nftBuyerAddr\n        }\n    },\n    {\n        type: STORAGE_DEPOSIT_RETURN_UNLOCK_CONDITION_TYPE,\n        amount: nextNftOutput.amount,\n        returnAddress: {\n            type: ED25519_ADDRESS_TYPE,\n            pubKeyHash: nftOwnerAddr\n        }\n    }\n];\n\nnextNftOutput.nftId = nftId;\n")),(0,a.kt)("h3",{id:"define-the-transaction-essence"},"Define the Transaction Essence"),(0,a.kt)("p",null,"The transaction takes the original NFT Output as Input and generates a ",(0,a.kt)("strong",{parentName:"p"},"new NFT Output")," with the new state that ",(0,a.kt)("strong",{parentName:"p"},"will\nstill keep the original NFT ID"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const inputs: IUTXOInput[] = [];\nconst outputs: INftOutput[] = [];\n\ninputs.push(TransactionHelper.inputFromOutputId(consumedOutputId));\noutputs.push(nextNftOutput);\n\nconst inputsCommitment = TransactionHelper.getInputsCommitment([initialNftOutput]);\n\nconst transactionEssence: ITransactionEssence = {\n    type: TRANSACTION_ESSENCE_TYPE,\n    networkId: TransactionHelper.networkIdFromNetworkName(nodeInfo.protocol.networkName),\n    inputs,\n    inputsCommitment,\n    outputs\n};\n")),(0,a.kt)("h3",{id:"add-the-unlock-conditions-to-the-new-nft-output"},"Add the Unlock Conditions to the New NFT Output"),(0,a.kt)("p",null,"The unlock you need to provide correspond to the signature calculated against the transaction essence using the private\nkey of the original owner address."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const essenceHash = TransactionHelper.getTransactionEssenceHash(transactionEssence);\n\nconst unlockCondition: ISignatureUnlock = {\n    type: SIGNATURE_UNLOCK_TYPE,\n    signature: {\n        type: ED25519_SIGNATURE_TYPE,\n        publicKey: nftOwnerPubKey,\n        signature: Converter.bytesToHex(Ed25519.sign(Converter.hexToBytes(nftOwnerPrivateKey), essenceHash), true)\n    }\n};\n\nconst transactionPayload: ITransactionPayload = {\n    type: TRANSACTION_PAYLOAD_TYPE,\n    essence: transactionEssence,\n    unlocks: [unlockCondition]\n};\n")),(0,a.kt)("h2",{id:"submit-the-block"},"Submit the Block"),(0,a.kt)("p",null,"Finally, you should submit the block. After the block is confirmed, if you query your NFT ID\nthrough ",(0,a.kt)("a",{parentName:"p",href:"https://explorer.shimmer.network/shimmer"},"the Shimmer Explorer"),", you will find the new NFT Output with the\nupdated state."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'const block: IBlock = {\n    protocolVersion: DEFAULT_PROTOCOL_VERSION,\n    parents: [],\n    payload: transactionPayload,\n    nonce: "0",\n};\n\nconst blockId = await client.blockSubmit(block);\nconsole.log("Block Id:", blockId);\n')),(0,a.kt)("h2",{id:"putting-it-all-together"},"Putting It All Together"),(0,a.kt)("p",null,"The complete source code of this part of the tutorial is available in\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/iota.js/blob/feat/stardust/packages/iota/examples/shimmer-nft-transaction-tutorial/src/nft-transaction.ts"},"official iota.js GitHub repository"),"."))}p.isMDXComponent=!0}}]);